Suggestions people have made:
- Full fledged reset button (reverting both bugs and tiles to saved data) - definitely will be implemented
- Progress display (A naive one that just displays the amount of updates since a reset will be possible, but calculating the length of the song in advance could be difficult and hard to make performant)
- Overall UI simplification and clarification (Potentially hard, but always being done.)

Things I know I want to do (which could get very long):
- Fill up the soundset and keep sample quality as high as possible within a 20 MB limit
- Indicate the position of bugs on the minimap, somehow (Hard to do in 64x64 confines)
- Add Web MIDI API support to allow instrument input
- Functions to rotate and flip a selection (flips implemented, 90 degree rotation still necessary)
- Implement an eyedropper tool (differentiated from copypaste by also cloning a tile's properties to your pen)
- Implement the promised upgrades to field size (High priority now that I've improved the save/load functions, will require corresponding improvements to the minimap as well)
- Zoom feature (Which might need better graphics to really shine and will be complicated to implement.)
- "Find Bug" feature that centers the camera on a bug (Made particularly useful by upgrades to field size)

Things I might do but am not sure about:
- Bug on bug collision detection (which has the potential to be very inefficient), so that bugs can't overlap and collisions probably change their behavior. (Up to 36 checks per second? Divergent series.)
- A basic scripting language to allow for arbitrarily complicated conditional code and such on the field (potentially very difficult and time consuming, besides ballooning file sizes). 

Suggestions that have already been implemented:
- Actually show the tile buffer (as filled up by the select tool) somehow, like a translucent overlay
- Indicate current part of the window on the minimap
- Scroll bars on the instrument list